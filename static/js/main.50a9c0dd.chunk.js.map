{"version":3,"sources":["Die.js","Dice.js","RuleRow.js","Rules.js","ScoreTable.js","Game.js","App.js","registerServiceWorker.js","index.js"],"names":["Die","props","handleClick","bind","this","toggleLocked","idx","dieIcons","locked","val","disabled","rolling","classes","icon","get","size","className","onClick","Component","defaultProps","Map","faDiceOne","faDiceTwo","faDiceThree","faDiceFour","faDiceFive","faDiceSix","Dice","dice","map","d","key","RuleRow","score","name","doScore","description","undefined","Rule","params","Object","assign","reduce","prev","curr","freqs","set","Array","from","values","filter","length","TotalOneNumber","evalRoll","count","SumDistro","freq","some","c","sum","FullHouse","includes","SmallStraight","Set","has","LargeStraight","Yahtzee","ones","twos","threes","fours","fives","sixes","threeOfKind","fourOfKind","fullHouse","smallStraight","largeStraight","yahtzee","chance","ScoreTable","scores","totalScore","updateHighScore","cellSpacing","evt","getTotalScore","highScore","Game","state","fill","rollsLeft","gameOver","roll","animateRoll","startNewGame","playerHighScore","JSON","parse","localStorage","getItem","setState","setTimeout","st","i","Math","ceil","random","slice","rulename","ruleFn","checkGameOver","newScore","setItem","stringify","messages","every","x","displayRollInfo","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.50a9c0dd.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Die.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDiceOne, faDiceTwo, faDiceThree, faDiceFour, faDiceFive, faDiceSix } from '@fortawesome/free-solid-svg-icons';\n\nclass Die extends Component {\n    static defaultProps = {\n        dieIcons: new Map([\n            [ 1, faDiceOne ],\n            [ 2, faDiceTwo ],\n            [ 3, faDiceThree ],\n            [ 4, faDiceFour ],\n            [ 5, faDiceFive ],\n            [ 6, faDiceSix ]\n        ]),\n        val: 5\n    };\n\n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick() {\n        this.props.toggleLocked(this.props.idx);\n    }\n\n    render() {\n        const { dieIcons, locked, val, disabled, rolling } = this.props;\n        const classes = `Die ${locked ? 'Die-locked' : ''}${rolling ? 'Die-rolling' : ''}`;\n\n        return <FontAwesomeIcon icon={dieIcons.get(val)} size='5x' className={classes} onClick={this.handleClick} disabled={disabled} />;\n    }\n}\n\nexport default Die;\n","import React, { Component } from 'react';\nimport Die from './Die';\nimport './Dice.css';\n\nclass Dice extends Component {\n    render() {\n        return (\n            <div className='Dice'>\n                {this.props.dice.map((d, idx) => (\n                    <Die\n                        toggleLocked={this.props.toggleLocked}\n                        val={d}\n                        locked={this.props.locked[idx]}\n                        idx={idx}\n                        key={idx}\n                        disabled={this.props.disabled}\n                        rolling={this.props.rolling && !this.props.locked[idx]}\n                    />\n                ))}\n            </div>\n        );\n    }\n}\n\nexport default Dice;\n","import React, { Component } from 'react';\nimport './RuleRow.css';\n\nclass RuleRow extends Component {\n    render() {\n        const { score, name, doScore, description, rolling } = this.props;\n        const disabled = score !== undefined;\n        return (\n            <tr className={`RuleRow RuleRow-${disabled ? 'disabled' : 'active'}`} onClick={disabled || rolling ? null : doScore}>\n                <td className='RuleRow-name'>{name}</td>\n                <td className='RuleRow-score'>{disabled ? score : description}</td>\n            </tr>\n        );\n    }\n}\n\nexport default RuleRow;\n","/** Rule for Yahtzee scoring.\n *\n * This is an \"abstract class\"; the real rules are subclasses of these.\n * This stores all parameters passed into it as properties on the instance\n * (to simplify child classes so they don't need constructors of their own).\n *\n * It contains useful functions for summing, counting values, and counting\n * frequencies of dice. These are used by subclassed rules.\n */\n\nclass Rule {\n    constructor(params) {\n        // put all properties in params on instance\n        Object.assign(this, params);\n    }\n\n    sum(dice) {\n        // sum of all dice\n        return dice.reduce((prev, curr) => prev + curr);\n    }\n\n    freq(dice) {\n        // frequencies of dice values\n        const freqs = new Map();\n        for (let d of dice) freqs.set(d, (freqs.get(d) || 0) + 1);\n        return Array.from(freqs.values());\n    }\n\n    count(dice, val) {\n        // # times val appears in dice\n        return dice.filter((d) => d === val).length;\n    }\n}\n\n/** Given a sought-for val, return sum of dice of that val.\n *\n * Used for rules like \"sum of all ones\"\n */\n\nclass TotalOneNumber extends Rule {\n    evalRoll = (dice) => {\n        return this.val * this.count(dice, this.val);\n    };\n}\n\n/** Given a required # of same dice, return sum of all dice.\n *\n * Used for rules like \"sum of all dice when there is a 3-of-kind\"\n */\n\nclass SumDistro extends Rule {\n    evalRoll = (dice) => {\n        // do any of the counts meet of exceed this distro?\n        return this.freq(dice).some((c) => c >= this.count) ? this.sum(dice) : 0;\n    };\n}\n\n/** Check if full house (3-of-kind and 2-of-kind) */\n\nclass FullHouse extends Rule {\n    evalRoll = (dice) => {\n        // is there 2 of one item and 3 of another?\n        const d = this.freq(dice);\n        return d.includes(2) && d.includes(3) ? this.score : 0;\n    };\n}\n\n/** Check for small straights. */\n\nclass SmallStraight extends Rule {\n    evalRoll = (dice) => {\n        const d = new Set(dice);\n        // Small straight must contain either 1-4, 2-5, or 3-6\n        if ((d.has(2) && d.has(3) && d.has(4) && (d.has(1) || d.has(5))) || (d.has(3) && d.has(4) && d.has(5) && (d.has(2) || d.has(6))))\n            return this.score;\n        return 0;\n    };\n}\n\n/** Check for large straights. */\n\nclass LargeStraight extends Rule {\n    evalRoll = (dice) => {\n        const d = new Set(dice);\n\n        // large straight must be 5 different dice & only one can be a 1 or a 6\n        return d.size === 5 && (!d.has(1) || !d.has(6)) ? this.score : 0;\n    };\n}\n\n/** Check if all dice are same. */\n\nclass Yahtzee extends Rule {\n    evalRoll = (dice) => {\n        // all dice must be the same\n        return this.freq(dice)[0] === 5 ? this.score : 0;\n    };\n}\n\n// ones, twos, etc score as sum of that value\nconst ones = new TotalOneNumber({ val: 1, description: '1 point per 1' });\nconst twos = new TotalOneNumber({ val: 2, description: '2 points per 2' });\nconst threes = new TotalOneNumber({ val: 3, description: '3 points per 3' });\nconst fours = new TotalOneNumber({ val: 4, description: '4 points per 4' });\nconst fives = new TotalOneNumber({ val: 5, description: '5 points per 5' });\nconst sixes = new TotalOneNumber({ val: 6, description: '6 points per 6' });\n\n// three/four of kind score as sum of all dice\nconst threeOfKind = new SumDistro({\n    count: 3,\n    description: 'Sum all dice if 3 are the same'\n});\nconst fourOfKind = new SumDistro({\n    count: 4,\n    description: 'Sum all dice if 4 are the same'\n});\n\n// full house scores as flat 25\nconst fullHouse = new FullHouse({\n    score: 25,\n    description: '25 points for a full house'\n});\n\n// small/large straights score as 30/40\nconst smallStraight = new SmallStraight({\n    score: 30,\n    description: '30 points for a small straight'\n});\nconst largeStraight = new LargeStraight({\n    score: 40,\n    description: '40 points for a large straight'\n});\n\n// yahtzee scores as 50\nconst yahtzee = new Yahtzee({\n    score: 50,\n    description: '50 points for yahtzee'\n});\n\n// for chance, can view as some of all dice, requiring at least 0 of a kind\nconst chance = new SumDistro({ count: 0, description: 'Sum of all dice' });\n\nexport { ones, twos, threes, fours, fives, sixes, threeOfKind, fourOfKind, fullHouse, smallStraight, largeStraight, yahtzee, chance };\n","import React, { Component } from 'react';\nimport RuleRow from './RuleRow';\nimport './ScoreTable.css';\nimport {\n    ones,\n    twos,\n    threes,\n    fours,\n    fives,\n    sixes,\n    threeOfKind,\n    fourOfKind,\n    fullHouse,\n    smallStraight,\n    largeStraight,\n    yahtzee,\n    chance\n} from './Rules';\n\nclass ScoreTable extends Component {\n    getTotalScore() {\n        const { scores } = this.props;\n        let totalScore = 0;\n        for (const score in scores) {\n            if (scores[score]) totalScore += scores[score];\n        }\n        this.props.updateHighScore(totalScore);\n        return totalScore;\n    }\n    render() {\n        const { scores, doScore } = this.props;\n\n        return (\n            <div className='ScoreTable'>\n                <section className='ScoreTable-section'>\n                    <h2>Upper</h2>\n                    <table cellSpacing='0'>\n                        <tbody>\n                            <RuleRow\n                                name='Ones'\n                                score={scores.ones}\n                                description={ones.description}\n                                doScore={(evt) => doScore('ones', ones.evalRoll)}\n                                rolling={this.props.rolling}\n                            />\n                            <RuleRow\n                                name='Twos'\n                                score={scores.twos}\n                                description={twos.description}\n                                doScore={(evt) => doScore('twos', twos.evalRoll)}\n                                rolling={this.props.rolling}\n                            />\n                            <RuleRow\n                                name='Threes'\n                                score={scores.threes}\n                                description={threes.description}\n                                doScore={(evt) => doScore('threes', threes.evalRoll)}\n                                rolling={this.props.rolling}\n                            />\n                            <RuleRow\n                                name='Fours'\n                                score={scores.fours}\n                                description={fours.description}\n                                doScore={(evt) => doScore('fours', fours.evalRoll)}\n                                rolling={this.props.rolling}\n                            />\n                            <RuleRow\n                                name='Fives'\n                                score={scores.fives}\n                                description={fives.description}\n                                doScore={(evt) => doScore('fives', fives.evalRoll)}\n                                rolling={this.props.rolling}\n                            />\n                            <RuleRow\n                                name='Sixes'\n                                score={scores.sixes}\n                                description={sixes.description}\n                                doScore={(evt) => doScore('sixes', sixes.evalRoll)}\n                                rolling={this.props.rolling}\n                            />\n                        </tbody>\n                    </table>\n                </section>\n                <section className='ScoreTable-section ScoreTable-section-lower'>\n                    <h2>Lower</h2>\n                    <table cellSpacing='0'>\n                        <tbody>\n                            <RuleRow\n                                name='Three of Kind'\n                                score={scores.threeOfKind}\n                                description={threeOfKind.description}\n                                doScore={(evt) => doScore('threeOfKind', threeOfKind.evalRoll)}\n                                rolling={this.props.rolling}\n                            />\n                            <RuleRow\n                                name='Four of Kind'\n                                score={scores.fourOfKind}\n                                description={fourOfKind.description}\n                                doScore={(evt) => doScore('fourOfKind', fourOfKind.evalRoll)}\n                                rolling={this.props.rolling}\n                            />\n                            <RuleRow\n                                name='Full House'\n                                score={scores.fullHouse}\n                                description={fullHouse.description}\n                                doScore={(evt) => doScore('fullHouse', fullHouse.evalRoll)}\n                                rolling={this.props.rolling}\n                            />\n                            <RuleRow\n                                name='Small Straight'\n                                score={scores.smallStraight}\n                                description={smallStraight.description}\n                                doScore={(evt) => doScore('smallStraight', smallStraight.evalRoll)}\n                                rolling={this.props.rolling}\n                            />\n                            <RuleRow\n                                name='Large Straight'\n                                score={scores.largeStraight}\n                                description={largeStraight.description}\n                                doScore={(evt) => doScore('largeStraight', largeStraight.evalRoll)}\n                                rolling={this.props.rolling}\n                            />\n                            <RuleRow\n                                name='Yahtzee'\n                                score={scores.yahtzee}\n                                description={yahtzee.description}\n                                doScore={(evt) => doScore('yahtzee', yahtzee.evalRoll)}\n                                rolling={this.props.rolling}\n                            />\n                            <RuleRow\n                                name='Chance'\n                                score={scores.chance}\n                                description={chance.description}\n                                doScore={(evt) => doScore('chance', chance.evalRoll)}\n                                rolling={this.props.rolling}\n                            />\n                        </tbody>\n                    </table>\n                </section>\n                <h2>TOTAL SCORE: {this.getTotalScore()}</h2>\n                <h2>YOUR HIGHSCORE: {this.props.highScore}</h2>\n            </div>\n        );\n    }\n}\n\nexport default ScoreTable;\n","import React, { Component } from 'react';\nimport Dice from './Dice';\nimport ScoreTable from './ScoreTable';\nimport './Game.css';\n\nconst NUM_DICE = 5;\nconst NUM_ROLLS = 3;\n\nclass Game extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dice: Array.from({ length: NUM_DICE }),\n            locked: Array(NUM_DICE).fill(false),\n            rollsLeft: NUM_ROLLS,\n            rolling: false,\n            highScore: 0,\n            gameOver: false,\n            scores: {\n                ones: undefined,\n                twos: undefined,\n                threes: undefined,\n                fours: undefined,\n                fives: undefined,\n                sixes: undefined,\n                threeOfKind: undefined,\n                fourOfKind: undefined,\n                fullHouse: undefined,\n                smallStraight: undefined,\n                largeStraight: undefined,\n                yahtzee: undefined,\n                chance: undefined\n            }\n        };\n        this.roll = this.roll.bind(this);\n        this.doScore = this.doScore.bind(this);\n        this.toggleLocked = this.toggleLocked.bind(this);\n        this.animateRoll = this.animateRoll.bind(this);\n        this.updateHighScore = this.updateHighScore.bind(this);\n        this.startNewGame = this.startNewGame.bind(this);\n    }\n    componentDidMount() {\n        const playerHighScore = JSON.parse(localStorage.getItem('highScore'));\n        if (playerHighScore > 0) {\n            this.setState({ highScore: playerHighScore });\n        }\n        this.animateRoll();\n    }\n\n    animateRoll() {\n        this.setState({ rolling: true }, () => {\n            setTimeout(this.roll, 1000);\n        });\n    }\n\n    roll() {\n        // roll dice whose indexes are in reroll\n        this.setState((st) => ({\n            dice: st.dice.map((d, i) => (st.locked[i] ? d : Math.ceil(Math.random() * 6))),\n            locked: st.rollsLeft > 1 ? st.locked : Array(NUM_DICE).fill(true),\n            rollsLeft: st.rollsLeft - 1,\n            rolling: false\n        }));\n    }\n\n    toggleLocked(idx) {\n        // toggle whether idx is in locked or not\n        if (this.state.rollsLeft > 0 && !this.state.rolling && !this.state.gameOver) {\n            this.setState((st) => ({\n                locked: [ ...st.locked.slice(0, idx), !st.locked[idx], ...st.locked.slice(idx + 1) ]\n            }));\n        }\n    }\n\n    doScore(rulename, ruleFn) {\n        // evaluate this ruleFn with the dice and score this rulename\n        this.setState(\n            (st) => ({\n                scores: { ...st.scores, [rulename]: ruleFn(this.state.dice) },\n                rollsLeft: NUM_ROLLS,\n                locked: Array(NUM_DICE).fill(false)\n            }),\n            () => {\n                this.checkGameOver();\n            }\n        );\n    }\n\n    updateHighScore(newScore) {\n        if (newScore > this.state.highScore) {\n            localStorage.setItem('highScore', JSON.stringify(newScore));\n            this.setState({ highScore: newScore });\n        }\n    }\n\n    checkGameOver() {\n        for (const score in this.state.scores) {\n            if (this.state.scores[score] === undefined) return this.animateRoll();\n        }\n        this.setState({ gameOver: true });\n    }\n\n    startNewGame() {\n        this.setState((st) => ({\n            locked: Array(NUM_DICE).fill(false),\n            gameOver: false,\n            scores: {\n                ones: undefined,\n                twos: undefined,\n                threes: undefined,\n                fours: undefined,\n                fives: undefined,\n                sixes: undefined,\n                threeOfKind: undefined,\n                fourOfKind: undefined,\n                fullHouse: undefined,\n                smallStraight: undefined,\n                largeStraight: undefined,\n                yahtzee: undefined,\n                chance: undefined\n            }\n        }));\n        this.animateRoll();\n    }\n\n    displayRollInfo() {\n        const messages = [ '0 Rolls Left', '1 Roll Left', '2 Rolls Left', 'Starting Round', 'Play Again?' ];\n        return this.state.gameOver ? messages[4] : messages[this.state.rollsLeft];\n    }\n\n    render() {\n        const { dice, locked, rollsLeft, rolling, gameOver, scores, highScore } = this.state;\n        return (\n            <div className='Game'>\n                <header className='Game-header'>\n                    <h1 className='App-title'>Yahtzee!</h1>\n                    <section className='Game-dice-section'>\n                        <Dice dice={dice} locked={locked} toggleLocked={this.toggleLocked} disabled={rollsLeft === 0} rolling={rolling} />\n                        <div className='Game-button-wrapper'>\n                            <button\n                                className='Game-reroll'\n                                disabled={locked.every((x) => x) || rolling}\n                                onClick={gameOver ? this.startNewGame : this.animateRoll}\n                            >\n                                {this.displayRollInfo()}\n                            </button>\n                        </div>\n                    </section>\n                </header>\n                <ScoreTable\n                    doScore={this.doScore}\n                    scores={scores}\n                    highScore={highScore}\n                    updateHighScore={this.updateHighScore}\n                    rolling={rolling}\n                />\n            </div>\n        );\n    }\n}\n\nexport default Game;\n","import React, { Component } from \"react\";\nimport Game from \"./Game\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className='App'>\n        <Game />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}